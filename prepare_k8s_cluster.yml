- name: Prepare Kubernetes Cluster Nodes
  hosts: all
  become: yes
  tasks:
    # Disable the firewall
    - name: Disable firewall
      command: ufw disable

    # Disable swapping
    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/swap/d' /etc/fstab

    # Add kernel parameters
    - name: Load kernel modules
      copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
    - name: Load overlay module
      command: modprobe overlay
    - name: Load br_netfilter module
      command: modprobe br_netfilter

    - name: Configure sysctl parameters
      copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
    - name: Apply sysctl parameters
      command: sysctl --system

    # Install container runtime (containerd)
    - name: Download containerd
      get_url:
        url: https://github.com/containerd/containerd/releases/download/v2.0.1/containerd-2.0.1-linux-amd64.tar.gz
        dest: /tmp/containerd.tar.gz

    - name: Extract containerd binary
      command: tar -C /usr/local -xzf /tmp/containerd.tar.gz

    - name: Set up containerd service
      get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /usr/lib/systemd/system/containerd.service

    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: started

    # Install runc
    - name: Download runc binary
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.2.4/runc.amd64
        dest: /tmp/runc.amd64
        mode: '0755'

    - name: Install runc binary
      copy:
        src: /tmp/runc.amd64
        dest: /usr/local/sbin/runc
        remote_src: yes
        mode: '0755'

    # Install CNI plugins
    - name: Download CNI plugins
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.6.2/cni-plugins-linux-amd64-v1.6.2.tgz
        dest: /tmp/cni-plugins.tgz

    - name: Install CNI plugins
      shell: |
        mkdir -p /opt/cni/bin
        tar -C /opt/cni/bin -xzf /tmp/cni-plugins.tgz

    # Configure containerd systemd cgroup driver
    - name: Ensure /etc/containerd exists
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Download containerd config from GitHub
      get_url:
        url: https://raw.githubusercontent.com/wassimbaklouti/containerd/main/config.toml
        dest: /etc/containerd/config.toml


    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

    # Install kubeadm, kubelet, and kubectl
    - name: Update apt package list
      command: apt-get update

    - name: Install apt dependencies for Kubernetes repository
      command: apt-get install -y apt-transport-https ca-certificates curl gpg

    - name: Download Kubernetes GPG key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key -o /tmp/k8s-release.key

    - name: Convert the Kubernetes GPG key
      shell: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/k8s-release.key

    - name: Clean up temporary Kubernetes GPG key
      shell: rm -f /tmp/k8s-release.key


    - name: Add Kubernetes apt repository
      command: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt package list after adding Kubernetes repository
      command: apt-get update


    - name: Install Kubernetes tools
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes tools
      command: apt-mark hold kubelet kubeadm kubectl
